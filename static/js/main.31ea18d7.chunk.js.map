{"version":3,"sources":["features/transactions/transactionsSlice.js","components/TransactionForm.js","components/Transaction.js","components/TransactionList.js","features/transactions/Transactions.js","features/budgets/budgetsSlice.js","components/Budget.js","features/budgets/Budgets.js","app/App.js","reportWebVitals.js","app/store.js","index.js"],"names":["CATEGORIES","initialState","Object","fromEntries","map","category","transactionsSlice","createSlice","name","reducers","addTransaction","state","action","newTransactionsForCategory","payload","slice","deleteTransaction","deletedIndex","findIndex","transaction","id","filter","item","index","actions","selectTransactions","transactions","selectFlattenedTransactions","values","reduce","a","b","TransactionForm","categories","dispatch","useDispatch","useState","setCategory","description","setDescription","amount","setAmount","className","onSubmit","e","preventDefault","parseFloat","uuidv4","htmlFor","value","onChange","currentTarget","c","type","step","Transaction","onClick","TransactionList","t","Transactions","useSelector","budgetsSlice","editBudget","budget","selectBudgets","budgets","Budget","remainingFunds","Number","amount1","amount2","toFixed","fundsRemainingClassName","getFundsRemainingClassName","App","Budgets","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","transactionsReducer","budgetsReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.31ea18d7.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const CATEGORIES = [\r\n  \"housing\",\r\n  \"food\",\r\n  \"transportation\",\r\n  \"utilities\",\r\n  \"clothing\",\r\n  \"healthcare\",\r\n  \"personal\",\r\n  \"education\",\r\n  \"entertainment\",\r\n];\r\nconst initialState = Object.fromEntries(\r\n  CATEGORIES.map((category) => [category, []])\r\n);\r\n\r\nconst transactionsSlice = createSlice({\r\n  name: \"transactions\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    addTransaction: (state, action) => {\r\n      let newTransactionsForCategory;\r\n      newTransactionsForCategory = [\r\n        ...state[action.payload.category].slice(),\r\n        action.payload,\r\n      ];\r\n      return {\r\n        ...state,\r\n        [action.payload.category]: newTransactionsForCategory,\r\n      };\r\n    },\r\n    deleteTransaction: (state, action) => {\r\n      let newTransactionsForCategory;\r\n      const deletedIndex = state[action.payload.category].findIndex(\r\n        (transaction) => transaction.id === action.payload.id\r\n      );\r\n      newTransactionsForCategory = state[action.payload.category].filter(\r\n        (item, index) => index !== deletedIndex\r\n      );\r\n      return {\r\n        ...state,\r\n        [action.payload.category]: newTransactionsForCategory,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addTransaction, deleteTransaction } = transactionsSlice.actions;\r\n\r\nexport default transactionsSlice.reducer;\r\n\r\nexport const selectTransactions = (state) => state.transactions;\r\nexport const selectFlattenedTransactions = (state) =>\r\n  Object.values(state.transactions).reduce((a, b) => [...a, ...b], []);\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  addTransaction,\r\n  CATEGORIES,\r\n} from \"../features/transactions/transactionsSlice\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default function TransactionForm({ categories }) {\r\n  const dispatch = useDispatch();\r\n  const [category, setCategory] = useState(CATEGORIES[0]);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      addTransaction({\r\n        category: category,\r\n        description: description,\r\n        amount: parseFloat(amount),\r\n        id: uuidv4(),\r\n      })\r\n    );\r\n    setCategory(CATEGORIES[0]);\r\n    setDescription(\"\");\r\n    setAmount(0);\r\n  };\r\n\r\n  return (\r\n    <section className=\"new-transaction-section\">\r\n      <h2>New Transaction</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-wrapper\">\r\n          <div>\r\n            <label htmlFor=\"category\">Category</label>\r\n            <select\r\n              id=\"category\"\r\n              value={category}\r\n              onChange={(e) => setCategory(e.currentTarget.value)}\r\n            >\r\n              {CATEGORIES.map((c) => (\r\n                <option key={c} value={c}>\r\n                  {c}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"description\">Description</label>\r\n            <input\r\n              id=\"description\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.currentTarget.value)}\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"amount\">Amount</label>\r\n            <input\r\n              id=\"amount\"\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.currentTarget.value)}\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <button>Add Transaction</button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteTransaction } from \"../features/transactions/transactionsSlice\";\r\n\r\nexport default function Transaction({ transaction }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDelete = (e) => {\r\n    dispatch(deleteTransaction(transaction));\r\n  };\r\n\r\n  return (\r\n    <li className=\"new-transaction\">\r\n      <span>\r\n        {transaction.amount} â€“ {transaction.category}{\" \"}\r\n        <span className=\"description\">( {transaction.description} )</span>\r\n      </span>\r\n      <button onClick={handleDelete} aria-label=\"Remove\">\r\n        X\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Transaction from \"./Transaction\";\r\n\r\nexport default function TransactionList({ transactions }) {\r\n  return (\r\n    <section className=\"new-transactions-section\">\r\n      <h2>Transactions</h2>\r\n      <ul className=\"new-transaction-list\">\r\n        {transactions.map((t) => (\r\n          <Transaction transaction={t} key={t.id} />\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectFlattenedTransactions } from \"./transactionsSlice\";\r\nimport TransactionForm from \"../../components/TransactionForm\";\r\nimport TransactionList from \"../../components/TransactionList\";\r\n\r\nconst Transactions = () => {\r\n  const transactions = useSelector(selectFlattenedTransactions);\r\n  return (\r\n    <div className=\"comments-container\">\r\n      <TransactionList transactions={transactions} />\r\n      <TransactionForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transactions;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const CATEGORIES = [\r\n  \"housing\",\r\n  \"food\",\r\n  \"transportation\",\r\n  \"utilities\",\r\n  \"clothing\",\r\n  \"healthcare\",\r\n  \"personal\",\r\n  \"education\",\r\n  \"entertainment\",\r\n];\r\nconst initialState = CATEGORIES.map((category) => ({\r\n  category: category,\r\n  amount: 0,\r\n}));\r\n\r\nconst budgetsSlice = createSlice({\r\n  name: \"budgets\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    editBudget: (state, action) => {\r\n      const newBudgets = state.map((budget) => {\r\n        if (budget.category === action.payload.category) {\r\n          return action.payload;\r\n        }\r\n        return budget;\r\n      });\r\n      return newBudgets;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { editBudget } = budgetsSlice.actions;\r\n\r\nexport default budgetsSlice.reducer;\r\n\r\nexport const selectBudgets = (state) => state.budgets;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { editBudget } from \"../features/budgets/budgetsSlice\";\r\nimport { selectTransactions } from \"../features/transactions/transactionsSlice\";\r\n\r\nexport default function Budget({ budget }) {\r\n  const dispatch = useDispatch();\r\n  const [amount, setAmount] = useState(budget.amount);\r\n  const transactions = useSelector(selectTransactions);\r\n\r\n  const handleEdit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(editBudget({ category: budget.category, amount: amount }));\r\n  };\r\n\r\n  const calculateTotalExpenses = () => {\r\n    return transactions[budget.category]\r\n      .map((transaction) => transaction.amount)\r\n      .reduce((amount1, amount2) => amount1 + amount2, 0);\r\n  };\r\n\r\n  const getFundsRemainingClassName = (amount) => {\r\n    if (parseFloat(amount) === 0) {\r\n      return null;\r\n    }\r\n\r\n    return parseFloat(amount) > 0 ? \"positive\" : \"negative\";\r\n  };\r\n\r\n  const remainingFunds = Number.parseFloat(\r\n    budget.amount - calculateTotalExpenses()\r\n  ).toFixed(2);\r\n  const fundsRemainingClassName = getFundsRemainingClassName(remainingFunds);\r\n\r\n  return (\r\n    <li className=\"budget-container\">\r\n      <div className=\"category-label\">Category</div>{\" \"}\r\n      <div className=\"category-wrapper\">\r\n        <h3 className=\"category-value\">{budget.category}</h3>\r\n        <form onSubmit={handleEdit} className=\"budget-form\">\r\n          <input\r\n            className=\"amount-input\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.currentTarget.value)}\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n          />\r\n          <button className=\"update-button\">Update</button>\r\n        </form>\r\n      </div>\r\n      <h4 className={`remaining-funds ${fundsRemainingClassName}`}>\r\n        Funds Remaining: {remainingFunds}\r\n      </h4>\r\n    </li>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectBudgets } from \"./budgetsSlice\";\r\nimport Budget from \"../../components/Budget\";\r\n\r\nconst Transactions = () => {\r\n  const budgets = useSelector(selectBudgets);\r\n  return (\r\n    <ul className=\"comments-container\">\r\n      {budgets.map((budget) => (\r\n        <Budget budget={budget} key={budget.category} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Transactions;\r\n","import Transactions from \"../features/transactions/Transactions\";\nimport Budgets from \"../features/budgets/Budgets\";\nimport React from \"react\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Expense Tracker</h1>\n        <Budgets />\n        <Transactions />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport transactionsReducer from \"../features/transactions/transactionsSlice\";\r\nimport budgetsReducer from \"../features/budgets/budgetsSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    transactions: transactionsReducer,\r\n    budgets: budgetsReducer,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}